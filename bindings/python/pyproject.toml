[project]
name = "fast_gliner"
version = "0.1.7"
description = "Python bindings for gline-rs: Inference Engine for GLiNER Models, written in Rust"
readme = "README.md"
requires-python = ">=3.9"
authors = [
  { name = "Tal Almagor", email = "almagoric@gmail.com" },
]

license = {text = "Apache"}

classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3 :: Only",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

keywords = [
    "nlp",
    "ner",
    "named entity recognition",
    "natural language processing",
    "onnx",
    "transformers",
    "rust",
    "pyo3",
    "gliner",
    "span extraction",
    "token classification",
    "zero-shot"
]

dependencies = [
    "huggingface_hub>=0.16.4,<1.0"
]

[project.optional-dependencies]
cuda = []

[build-system]
requires = ["maturin>=1.4,<2.0"]
build-backend = "maturin"

[tool.maturin]
python-source = "py_src"
module-name = "fast_gliner.fast_gliner"
bindings = "pyo3"
features = ["pyo3/extension-module"]

[tool.black]
line-length = 119
target-version = ["py311"]

[tool.ruff]
line-length = 119
target-version = "py311"
lint.ignore = [
  # a == None in tests vs is None.
  "E711",
  # a == False in tests vs is False.
  "E712",
  # try.. import except.. pattern without using the lib.
  "F401",
  # Raw type equality is required in asserts
  "E721",
  # Import order
  "E402",
  # Fixtures unused import
  "F811",
]
